<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonEdit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>